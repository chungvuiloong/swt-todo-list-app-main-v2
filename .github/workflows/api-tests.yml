name: API Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/api-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/api-tests.yml'
  schedule:
    # Run API tests daily at 1 AM UTC
    - cron: '0 1 * * *'
  workflow_dispatch:
    # Allow manual triggering

env:
  PYTHON_VERSION: '3.11'

jobs:
  api-tests:
    name: API Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16.0
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 840fb30f-e424-4a97-b58c-ef4433ebca85
          POSTGRES_DB: todo-app
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Robot Framework and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install robotframework
        pip install robotframework-requests
        pip install robotframework-jsonlibrary
        pip install requests

    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        pip install poetry
        poetry config virtualenvs.create false
        poetry install --no-root

    - name: Start backend service
      working-directory: ./backend
      env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: 840fb30f-e424-4a97-b58c-ef4433ebca85
        POSTGRES_DB: todo-app
        DATABASE_URL: postgresql://postgres:840fb30f-e424-4a97-b58c-ef4433ebca85@localhost:5432/todo-app
        SECRET_KEY: "test-secret-key-for-ci"
        TOKEN_ENCRYPTION_ALGORITHM: "HS256"
        ACCESS_TOKEN_EXPIRE_MINUTES: 1440
        REFRESH_TOKEN_EXPIRE_DAYS: 30
      run: |
        # Start backend API
        nohup python -m uvicorn src.main:app --host 0.0.0.0 --port 4322 &
        sleep 10

    - name: Wait for API to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:4322/api/todo-lists/roles; do sleep 2; done'
        echo "API is ready"

    - name: Run Smoke API Tests
      working-directory: ./backend/api-tests
      run: |
        robot --outputdir results \
              --include smoke \
              tests/

    - name: Run All API Tests
      working-directory: ./backend/api-tests
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      run: |
        robot --outputdir results-full \
              tests/

    - name: Upload API Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: api-test-results
        path: backend/api-tests/results*/
        retention-days: 30

    - name: Generate Test Summary
      if: always()
      run: |
        echo "## API Test Results" >> $GITHUB_STEP_SUMMARY
        if [ -f backend/api-tests/results/output.xml ]; then
          python -c "
          import xml.etree.ElementTree as ET
          tree = ET.parse('backend/api-tests/results/output.xml')
          suite = tree.getroot()
          total = suite.find('.//statistics/total/stat[@pass]')
          if total is not None:
              print(f'✅ Passed: {total.get(\"pass\")}')
              print(f'❌ Failed: {total.get(\"fail\")}')
          " >> $GITHUB_STEP_SUMMARY
        else
          echo "No test results found" >> $GITHUB_STEP_SUMMARY
        fi